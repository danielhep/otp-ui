otpUi:
  AccessLegBody:
    RentedVehicleSubheader:
      pickupRental: "{company} {vehicleType} {vehicleName} 픽업"
      resumeRentalRide: 임대료를 계속 사용하십시오
      vehicleType:
        vehicle: 차량
        bike: 자전거
        bikeshare: 자전거
        car: 자동차
        escooter: 전기 스쿠터
      walkVehicle: "{place} 를 따라 차량를 밀다"
    LegDiagramPreview:
      elevationChart: 고도 차트
      noElevationData: 사용 가능한 고도 데이터가 없습니다.
      toggleElevationChart: 토글 고도 차트
    step:
      circleClockwise: 시계 방향으로 원을 따라갑니다
      hardLeft: 날카로운 왼쪽
      hardRight: 날카로운 권리
      right: 오른
      slightlyLeft: 약간 왼쪽
      uTurnLeft: 유턴
      uTurnRight: 유턴
      continue: 계속
      circleCounterClockwise: 시계 반대 방향으로 서클을 따르십시오
      left: 왼쪽
      slightlyRight: 약간 오른쪽
    stepHeading:
      east: 동쪽
      north: 북쪽
      northeast: 북동쪽
      northwest: 북서쪽
      south: 남쪽
      southeast: 남동쪽
      southwest: 남서쪽
      west: 서쪽
    stepGeneric: "{street} 에 {step}"
    summaryMode:
      bikeshare: 자전거 공유
      carDrive: 운전하다
      walk: 걷다
      bike: 자전거
      carHail: 타다
      escooter: 타다
    TncLeg:
      bookRide: 차량을 예약하다
      bookRideLater: 예약은 {timeMillis, time, short} 까지 기다려주세요
      estimatedCost: "예상 비용은 : {minFare} - {maxFare}"
      estimatedTravelTime: "예상 여행 시간: {duration} (트래픽을 고려하지 않음)"
      waitForPickup: "{company} 픽업 {minutes, plural, =0 {} other { # 분} } 대기"
    unnamedPath: 이름 없는 경로
    vehicleType:
      vehicle: 차량
      bike: 자전거
      bikeshare: 자전거
      car: 자동차
      escooter: 전기 스쿠터
    unnamedRoad: 이름 없는 길
    vehicleTitle: "{company} {vehicleType}"
    stepDepart: "{street} 에서 {heading}으로 향하다"
    stepElevator: 엘리베이터를 타고 {street} 이동
    summaryAndDistance: "{place} 에 {mode} {distance}"
    mapillaryTooltip: 이 위치에 거리 이미지를 보여줍니다
    summary: "{place} 에 {mode}"
  ItineraryBody:
    common:
      durationShort: "{hours, plural, =0 {} other {# 시간 }}{minutes} 분"
    flexAdvanceNotice: " 최소 {leadDays}일 전에"
    flexCallAhead: 미리 전화
    flexCallNumber: "{phoneNumber}에 전화"
    viewOnMap: 지도에서
    flexPickupMessage: 이 경로를 이용하려면 {advanceNotice}{action}야 합니다.
    stayOnBoard: "{place} 에 도착하면 현재 버스에 머무르십시오."
    travelBy: "{mode} 여행하다"
    travelByMode:
      bike: 자전거로
      car: 차로
      escooter: 전자 스쿠터로
      walk: 걸어서
  TransitLegBody:
    AlertsBody:
      today: 오늘
      tomorrow: 내일
      yesterday: 어제
      effectiveDate: "{dateTime, date, long}부터 시행"
      effectiveTimeAndDate: "{day} {dateTime, time, short}부터 시행"
    fare: "요금: {fare}"
    operatedBy: 운영하는 서비스 {agencyLink}
    alertsHeader: "{alertCount}개의 알림"
    stopViewer: 정류장 뷰어
    tripViewer: 여행 뷰어
    routeDescription: "{routeName} <toPrefix>에</toPrefix> {headsign}"
    rideDurationAndStops: "승차 {duration}{numStops, plural, =1 {} other { / # 정거장}}"
    stopId: 정류장 ID {stopId}
    stopIdBasic: ID {stopId}
    typicalWait: "일반적인 대기 시간: {waitTime}"
